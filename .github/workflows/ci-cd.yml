name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: pip install -r requirements.txt

  test:
    needs: install-dependencies
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: sba24070
          POSTGRES_USER: sba24070_user
          POSTGRES_PASSWORD: your_secure_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U sba24070_user" --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Restore pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Set DB host to localhost for CI
        run: python3 custom_scripts/host_helper.py <<< "1"
      - name: Check email environment variables
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: sba24070
          POSTGRES_USER: sba24070_user
          POSTGRES_PASSWORD: your_secure_password
        run: python manage.py test books.tests.EnvVarTest
      - name: Run Django tests individually
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: sba24070
          POSTGRES_USER: sba24070_user
          POSTGRES_PASSWORD: your_secure_password
        run: |
          python manage.py test books.tests.BookModelTest.test_create_and_retrieve_book
          python manage.py test books.tests.BookModelTest.test_unique_isbn_constraint
          python manage.py test books.tests.BookModelTest.test_required_fields
          python manage.py test books.tests.BookModelTest.test_increment_view_count
          python manage.py test books.tests.BookModelTest.test_get_most_read_and_most_viewed
          python manage.py test books.tests.BookModelTest.test_assign_tags_to_book
          python manage.py test books.tests.BookModelTest.test_book_str_representation
          python manage.py test books.tests.UserModelTest.test_user_authentication
          python manage.py test books.tests.UserModelTest.test_notification_creation_and_mark_as_read
          python manage.py test books.tests.EmailBackendTest.test_send_real_email

  runmigrations:
    needs: install-dependencies
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: sba24070
          POSTGRES_USER: sba24070_user
          POSTGRES_PASSWORD: your_secure_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U sba24070_user" --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Restore pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Set DB host to localhost for CI
        run: python3 custom_scripts/host_helper.py <<< "1"
      - name: Run django migrate
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: sba24070
          POSTGRES_USER: sba24070_user
          POSTGRES_PASSWORD: your_secure_password
        run: python manage.py migrate

  migrations-check:
    needs: install-dependencies
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: sba24070
          POSTGRES_USER: sba24070_user
          POSTGRES_PASSWORD: your_secure_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U sba24070_user" --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Restore pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Set DB host to localhost for CI
        run: python3 custom_scripts/host_helper.py <<< "1"
      - name: Run makemigrations --check
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: sba24070
          POSTGRES_USER: sba24070_user
          POSTGRES_PASSWORD: your_secure_password
        run: python manage.py makemigrations --check

  migrations-merge-check:
    needs: install-dependencies
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: sba24070
          POSTGRES_USER: sba24070_user
          POSTGRES_PASSWORD: your_secure_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U sba24070_user" --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Restore pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Set DB host to localhost for CI
        run: python3 custom_scripts/host_helper.py <<< "1"
      - name: Run makemigrations --merge --check
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: sba24070
          POSTGRES_USER: sba24070_user
          POSTGRES_PASSWORD: your_secure_password
        run: python manage.py makemigrations --merge --check

  docker:
    needs: [test, runmigrations, migrations-check, migrations-merge-check]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/devops-book-app:latest

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'
      - name: Set up Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG_B64 }}" | base64 --decode > $HOME/.kube/config
      - name: Test kubectl access
        run: kubectl get nodes > kubectl_get_nodes.txt 2>&1 || true
      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/django-deployment django=${{ secrets.DOCKER_USERNAME }}/devops-book-app:latest || true
          kubectl rollout status deployment/django-deployment || true

  helm-deploy:
    needs: docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'
      - name: Set up Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG_B64 }}" | base64 --decode > $HOME/.kube/config
      - name: Test kubectl access
        run: kubectl get nodes > kubectl_get_nodes.txt 2>&1 || true
      - name: Helm upgrade/install
        run: |
          helm upgrade --install book-catalogue ./book-catalogue \
            --namespace default \
            --set image.repository=${{ secrets.DOCKER_USERNAME }}/devops-book-app \
            --set image.tag=latest \
            --set secrets.SECRET_KEY=${{ secrets.SECRET_KEY }} \
            --set secrets.POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
            --set secrets.POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
            --set secrets.EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }} \
            --set secrets.EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }} \
            --wait > helm_upgrade.txt 2>&1 || true

  coverage:
    needs: install-dependencies
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: sba24070
          POSTGRES_USER: sba24070_user
          POSTGRES_PASSWORD: your_secure_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U sba24070_user" --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Restore pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Set DB host to localhost for CI
        run: python3 custom_scripts/host_helper.py <<< "1"
      - run: coverage run manage.py test
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: sba24070
          POSTGRES_USER: sba24070_user
          POSTGRES_PASSWORD: your_secure_password
      - run: coverage report
      - run: coverage xml

  type-check:
    needs: install-dependencies
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: sba24070
          POSTGRES_USER: sba24070_user
          POSTGRES_PASSWORD: your_secure_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U sba24070_user" --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Restore pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Set DB host to localhost for CI
        run: python3 custom_scripts/host_helper.py <<< "1"
      - run: mypy .
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: sba24070
          POSTGRES_USER: sba24070_user
          POSTGRES_PASSWORD: your_secure_password

  lint:
    needs: install-dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Restore pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run flake8 and save output
        run: |
          flake8 . > flake8.txt || true

  docs:
    needs: install-dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Restore pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Build mkdocs and save output
        run: |
          mkdocs build > mkdocs.txt 2>&1 || true 